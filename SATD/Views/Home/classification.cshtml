@model SATD.Models.Classification
@{
    ViewBag.Title = "classification";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <form method="get" action="/home/classification?CommentsID=@ViewBag.CommentsID">
        <div class="panel panel-default">
            <div class="panel-heading"><h1>Labeling Self-Admitted Technical Debt Comments and Commites</h1></div>
            <div class="panel-body">
                <div class="alert alert-info">
                    <div class="col-md-6">
                         Participant Email: <strong>@ViewBag.ParticipantEmail</strong>
                    </div>
                    <div class="col-md-6">
                        Participant Comments classifed : <strong>@ViewBag.NoOfComments</strong>
                    </div>
                    <br />
                </div>
                @{
                if (!string.IsNullOrEmpty(@ViewBag.message))
                { 
               <div class="alert alert-success">@ViewBag.message</div>
                }
                }

                <table class="table table-bordered table-responsive">
                    <thead style="font-weight:bold">
                        <tr>
                            <td style="width:49%"> Comment/Commit</td>
                            <td style="width:29%">Classification </td>
                            <td style="width:19%"> Action</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <div class="form-group">
                                    <p>@ViewBag.CommentsID :- @ViewBag.Desc</p>
                                </div>

                                <input type="hidden" name="CommentsID" value="@ViewBag.CommentsID" />
                                <input type="hidden" name="ParticipantID" value="@ViewBag.ParticipantID" />


                            </td>
                            <td>

                                <div class="form-group">
                                    @Html.DropDownListFor(Model => Model.ClassificationID, null, "-- Select --", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(Model => Model.ClassificationID, null, new { @class = "text-danger" })
                                </div>

                            </td>
                            <td>
                                <div class="form-group col-md-6">

                                    <input type="submit" value="Save" class="btn btn-success" />

                                </div>

                                <div class="form-group col-md-6">

                                    <input type="button" value="Skip" class="btn btn-danger" onclick="@("location.href='"+ Url.Action("classification","home",new { @skip = 1})+ "'")" />

                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="panel panel-footer">
                    <p class="text-danger"> Notes:</p>
                    <ul>
                        <li> If the Comments/Commits text not appear, please click on the skip, to get a new one.</li>
                        <li> If you are not certain of the comments type, you can skip it.</li>
                        <li>
   
                            Some <strong style="color:brown">Commits</strong>  indicates that related or solved type of debt. Choose the type of debt. E.g.
                            <ol>
                                <li>Add some explanations about what's going on.--> <strong>Documentation</strong></li>
                                <li>Added unit test to show the issue.--><strong>Test</strong> </li>
                                <li> The only feature which we don't support is correlated message groups. That requires a bit more work and also may complicated the configuration a bit as you would need to configure- expression to evaluate the correlation keyAnd then the throttler logic need to have a map of correlation key --> <strong>Requirement</strong></li>
                            </ol>
                            
                        </li>
                        <li> Please try to classify as you can, and try to not less than 20 comments. </li>
                    </ul>

                    <p class="text-danger">Definition:</p>
                    <ul>
                        <li>
                            <b> Design debt: </b>
                            Indicate that there is a problem with the design of the code. They can be comments about misplaced code,
                            lack of abstraction, long methods, poor implementation,workarounds or a temporary solution. <b>Eg.</b> //TODO This method is too complex
                        </li>
                        <li>

                            <b> Defect debt: </b>
                            In defect debt comments the author states that a part of the code does not have the expected behavior,
                            meaning that there is a defect in the code. <b>Eg.</b> // Bug in above method

                        </li>
                        <li>
                            <b> Requirement debt: </b>
                            Comments indicate that there is an ambiguous requirement that leads to  incompleteness of the method, class or program.<b>Eg.</b> // TODO support multiple signers
                        </li>
                        <li>
                            <b> Test debt: </b>
                            Need for implementation or improvement of the current tests.
                            Lack of tests, inadequate test coverage, and improper test design. <b>Eg.</b>//TODO - need a lot more tests
                        </li>
                        <li>
                            <b> documentation debt: </b>
                            Incomplete comments, lack of code comments,  no documentation for important concerns,
                            poor documentation, author express that there is no proper documentation supporting that part of the program. <b>Eg.</b> // TODO Document the reason for this
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </form>

